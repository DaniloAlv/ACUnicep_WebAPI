// <auto-generated />
using System;
using ACUnicep.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ACUnicep.Data.Migrations
{
    [DbContext(typeof(AcUnicepDbContext))]
    [Migration("20210908003502_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ACUnicep.Domain.Entities.Aluno", b =>
                {
                    b.Property<string>("RA")
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .IsFixedLength(true);

                    b.Property<int>("CursoId")
                        .HasColumnType("int")
                        .HasColumnName("COD_CURSO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NOME");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("COD_USUARIO");

                    b.HasKey("RA");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.AtividadeComplementar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CAMINHO_ARQUIVO");

                    b.Property<string>("CodigoAluno")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .HasColumnName("COD_ALUNO")
                        .IsFixedLength(true);

                    b.Property<string>("CodigoProfessor")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .HasColumnName("COD_PROFESSOR")
                        .IsFixedLength(true);

                    b.Property<DateTime>("DataSubmissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 9, 7, 21, 35, 1, 719, DateTimeKind.Local).AddTicks(2940))
                        .HasColumnName("DT_SUBMISSAO");

                    b.Property<DateTime?>("DataValidacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_VALIDACAO");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("OBSERVACOES");

                    b.Property<int>("QuantidadeHoras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("QTD_HORAS");

                    b.Property<int>("TipoAtividadeId")
                        .HasColumnType("int")
                        .HasColumnName("COD_TIPO_ATIVIDADE");

                    b.Property<bool>("Valida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("ST_VALIDA");

                    b.HasKey("Id");

                    b.HasIndex("CodigoAluno");

                    b.HasIndex("CodigoProfessor");

                    b.ToTable("AtividadesComplementares");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.Professor", b =>
                {
                    b.Property<string>("CodigoRegistro")
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .HasColumnName("COD_PROFESSOR")
                        .IsFixedLength(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("NOME");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("COD_USUARIO");

                    b.HasKey("CodigoRegistro");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("CodigoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("NivelAcesso")
                        .HasColumnType("int")
                        .HasColumnName("COD_NIVEL_ACESSO");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SENHA");

                    b.Property<bool>("Valido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("ST_VALIDO");

                    b.HasKey("CodigoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.Aluno", b =>
                {
                    b.HasOne("ACUnicep.Domain.Entities.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("ACUnicep.Domain.Entities.Aluno", "UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.AtividadeComplementar", b =>
                {
                    b.HasOne("ACUnicep.Domain.Entities.Aluno", "Aluno")
                        .WithMany("AtividadesComplementares")
                        .HasForeignKey("CodigoAluno")
                        .IsRequired();

                    b.HasOne("ACUnicep.Domain.Entities.Professor", "Professor")
                        .WithMany("AtividadesComplementares")
                        .HasForeignKey("CodigoProfessor")
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.Professor", b =>
                {
                    b.HasOne("ACUnicep.Domain.Entities.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("ACUnicep.Domain.Entities.Professor", "UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("AtividadesComplementares");
                });

            modelBuilder.Entity("ACUnicep.Domain.Entities.Professor", b =>
                {
                    b.Navigation("AtividadesComplementares");
                });
#pragma warning restore 612, 618
        }
    }
}
